eval("//# sourceURL=vendor/ember-cli/loader.js");

;eval("define(\"telegram-mvc/adapters/application\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    var ApplicationAdapter = DS.FixtureAdapter.extend();\n\n    __exports__[\"default\"] = ApplicationAdapter;\n  });//# sourceURL=telegram-mvc/adapters/application.js");

;eval("define(\"telegram-mvc/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"telegram-mvc/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=telegram-mvc/app.js");

;eval("define(\"telegram-mvc/controllers/auth/login\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var AuthLoginController = Ember.Controller.extend({\n      username: \'\', //not mandatory. But helps readability.\n      password: \'\', //not mandatory. But helps readability.\n\n      actions:{\n        authenticate: function() {\n          var suppliedUsername = this.get(\'username\');\n          var suppliedPassword = this.get(\'password\');\n          var _this = this;\n\n          this.store.find(\'user\', suppliedUsername).then(function (user) {\n            var userPassword = user.get(\'password\');\n            if (userPassword === suppliedPassword){\n            //set the users name here\n            _this.get(\'session\').set(\'user\', user.get(\'name\'));\n\n            _this.transitionToRoute(\'mystream\');\n            } else {\n             alert(\'Password does not match. Please try again.\');\n           }\n        }, function() {\n            alert(\"The user was not found in the system.\");\n         });\n       }\n     }\n    });\n\n    __exports__[\"default\"] = AuthLoginController;\n  });//# sourceURL=telegram-mvc/controllers/auth/login.js");

;eval("define(\"telegram-mvc/controllers/auth/signup\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var AuthSignupController = Ember.Controller.extend({\n\n      username: \'\',\n    	password: \'\',\n\n      actions: {\n        saveUser: function() {\n          var store = this.store;\n          var name = this.get(\'name\');\n          var username = this.get(\'username\');\n          var password = this.get(\'password\');\n          var user = store.createRecord(\'user\',{\n            id: username,\n            name: name,\n            username: username,\n            password: password\n          });\n\n          var _this = this;\n          user.save().then(function() {\n              _this.get(\'session\').set(\'user\', user.get(\'name\'));\n              _this.transitionToRoute(\'/mystream\');\n              },function(reason) {\n                alert(reason);\n              });\n          }\n        }\n      });\n\n    __exports__[\"default\"] = AuthSignupController;\n  });//# sourceURL=telegram-mvc/controllers/auth/signup.js");

;eval("define(\"telegram-mvc/controllers/mystream\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var MystreamController = Ember.ArrayController.extend({\n      sortProperties: [\'createdAt\'],\n      sortAscending: true,\n      actions: {\n        saveComment: function() {\n          var store = this.store;\n          var post = store.createRecord(\'post\',{\n            postCreator: this.get(\'session.user.name\'),\n            postContent: this.get(\'postContent\')\n          });\n          post.save();\n        }\n      }\n\n    });\n\n    __exports__[\"default\"] = MystreamController;\n  });//# sourceURL=telegram-mvc/controllers/mystream.js");

;eval("define(\"telegram-mvc/initializers/export-application-global\", \n  [\"ember\",\"telegram-mvc/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    function initialize(container, application) {\n      var classifiedName = Ember.String.classify(config.modulePrefix);\n\n      if (config.exportApplicationGlobal) {\n        window[classifiedName] = application;\n      }\n    };\n    __exports__.initialize = initialize;\n    __exports__[\"default\"] = {\n      name: \'export-application-global\',\n\n      initialize: initialize\n    };\n  });//# sourceURL=telegram-mvc/initializers/export-application-global.js");

;eval("define(\"telegram-mvc/initializers/session\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    function initialize(container, app) {\n      var Session = Ember.Object.extend({\n        user: null,\n\n        isAuthenticated: function(){\n          return this.get(\'user\') != null;\n        }.property(\'user\')\n      });\n\n\n      app.register(\'session:main\', Session);\n\n\n      app.inject(\'route\', \'session\', \'session:main\');\n      app.inject(\'controller\', \'session\', \'session:main\');\n\n    }\n\n    __exports__.initialize = initialize;__exports__[\"default\"] = {\n      name: \'session\',\n      initialize: initialize\n    };\n  });//# sourceURL=telegram-mvc/initializers/session.js");

;eval("define(\"telegram-mvc/models/post\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    var Post = DS.Model.extend({\n      postCreator: DS.belongsTo(\'user\'),\n      postContent: DS.attr(\'string\'),\n\n      createdAt: DS.attr(\'date\', {\n              defaultValue: function() { return new Date(); }\n          }),\n\n\n    });\n\n    Post.reopenClass({\n        FIXTURES: [\n        {\n          id: 1,\n          postCreator: \"john\",\n          postContent: \"Round the rugged rock ...\",\n          createdAt: new Date(\"October 13, 2014 11:13:00\")\n        },\n        {\n          id: 2,\n          postCreator: \"john\",\n          postContent: \"Ran the ragged rascal!\",\n          createdAt: new Date(\"October 14, 2014 12:30:00\")\n        },\n        {\n          id: 3,\n          postCreator: \"sarah\",\n          postContent: \"Beautiful bright day today!\",\n          createdAt: new Date(\"October 14, 2014 12:40:00\")\n        },\n        {\n          id: 4,\n          postCreator: \"sarah\",\n          postContent: \"The sun shines bright here in Oz\",\n          createdAt: new Date(\"October 12, 2014 12:30:00\")\n        },\n        {\n          id: 5,\n          postCreator: \"mary\",\n          postContent: \"We\'re having a snow storm here\",\n          createdAt: new Date(\"October 14, 2014 2:30:00\")\n        },\n        {\n          id: 6,\n          postCreator: \"mary\",\n          postContent: \"The lake opposite is frozen!\",\n          createdAt: new Date(\"October 15, 2014 12:30:00\")\n        }\n\n      ]\n    });\n\n    __exports__[\"default\"] = Post;\n  });//# sourceURL=telegram-mvc/models/post.js");

;eval("define(\"telegram-mvc/models/user\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    var User = DS.Model.extend({\n      name: DS.attr(\'string\'),\n      email: DS.attr(\'string\'),\n      password: DS.attr(\'string\'),\n      //photoURL: DS.attr(\'string\'),\n      //posts: DS.hasMany(\'post\'),\n      //followers: DS.hasMany(\'user\'),\n      //following: DS.hasMany(\'user\'),\n\n    });\n\n    User.reopenClass({\n        FIXTURES: [\n        {\n          id: \"john\",\n          name: \"John Dufflebag\",\n          email: \"johns@gmail.com\",\n          password: \"john\",\n          //photoURL: \"/images/john.jpg\",\n          //posts: [1,2],\n          //followers: [\"mary\"],\n          //following: [\"mary\"]\n        },\n        {\n          id: \"sarah\",\n          name: \"Sarah\",\n          email: \"sarah@gmail.com\",\n          password: \"sarah\",\n          //photoURL: \"/images/sarah.jpg\",\n          //posts: [3,4],\n          //followers: [\"mary\"],\n          //following: [\"mary\",\"david\"]\n        },\n        {\n          id: \"mary\",\n          name: \"Mary\",\n          email: \"mary@gmail.com\",\n          password: \"mary\",\n          //photoURL: \"/images/mary.jpg\",\n          //posts: [5,6],\n          //followers: [\"john\", \"sarah\"],\n          //following: [\"john\", \"sarah\"]\n        }\n        ]\n    });\n\n    __exports__[\"default\"] = User;\n  });//# sourceURL=telegram-mvc/models/user.js");

;eval("define(\"telegram-mvc/router\", \n  [\"ember\",\"telegram-mvc/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function() {\n      this.resource(\'auth\', {path: \'/\'}, function(){\n        this.route (\'signup\', {path: \'/\'});\n        this.route(\'login\');\n        this.route(\'reset\');\n        this.route(\'checkinbox\');\n        });\n\n      this.route(\'mystream\');\n\n      this.resource(\'user\', {path: \'/:user_id\'}, function(){\n        this.route(\'posts\', {path: \'/\'});\n        this.route(\'following\');\n        this.route(\'followers\');\n      });\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=telegram-mvc/router.js");

;eval("define(\"telegram-mvc/routes/mystream\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var MystreamRoute = Ember.Route.extend({\n      model: function() {\n              return this.store.find(\'post\');\n          }\n    });\n\n    __exports__[\"default\"] = MystreamRoute;\n  });//# sourceURL=telegram-mvc/routes/mystream.js");

;eval("define(\"telegram-mvc/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=telegram-mvc/templates/application.js");

;eval("define(\"telegram-mvc/templates/auth\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      data.buffer.push(\"<div class=\\\"auth_background\\\">\\n	<div class=\\\"login_area\\\">\\n		<div class=\\\"left_login\\\">\\n			<img class=\\\"logo\\\" src=\\\"/images/telegram-logo.png\\\"/>\\n			<div class=\\\"vertical_bar\\\"></div>\\n		</div>\\n		<div class=\\\"right_login\\\">\\n			<img class=\\\"postmark\\\" src=\\\"/images/postmark.png\\\">\\n			<div class=\\\"signin_area\\\">\\n				<div class=\\\"login_form\\\">\\n					\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n				</div>\\n			</div>\\n		</div>\\n	</div>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=telegram-mvc/templates/auth.js");

;eval("define(\"telegram-mvc/templates/auth/checkinbox\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<div class=\\\"login_area\\\">\\n  <div class=\\\"left_login\\\">\\n    <img class=\\\"logo\\\" src=\\\"/images/telegram-logo.png\\\"/>\\n    <div class=\\\"vertical_bar\\\"></div>\\n  </div>\\n  <div class=\\\"right_login\\\">\\n    <img class=\\\"postmark\\\" src=\\\"/images/postmark.png\\\">\\n    <div class=\\\"signin_area\\\">\\n      <div class=\\\"login_form\\\">\\n        <span class=\\\"get_going\\\">Check your inbox</span><br><br>\\n        We\'ve sent you a recovery password in your email inbox.\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\");\n      \n    });\n  });//# sourceURL=telegram-mvc/templates/auth/checkinbox.js");

;eval("define(\"telegram-mvc/templates/auth/login\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\" Recover Password \");\n      }\n\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\"Signup\");\n      }\n\n      data.buffer.push(\"<span class=\\\"get_going\\\">Get going ...</span><br><br>\\n\\n\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"text\"),\n        \'class\': (\"input\"),\n        \'placeholder\': (\"Enter your username ...\"),\n        \'value\': (\"username\")\n      },hashTypes:{\'type\': \"STRING\",\'class\': \"STRING\",\'placeholder\': \"STRING\",\'value\': \"ID\"},hashContexts:{\'type\': depth0,\'class\': depth0,\'placeholder\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n<br>\\n\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"password\"),\n        \'class\': (\"input\"),\n        \'placeholder\': (\"Enter your password ...\"),\n        \'value\': (\"password\")\n      },hashTypes:{\'type\': \"STRING\",\'class\': \"STRING\",\'placeholder\': \"STRING\",\'value\': \"ID\"},hashContexts:{\'type\': depth0,\'class\': depth0,\'placeholder\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n<br><br>\\n<button class=\\\"simple_action\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"authenticate\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Login</button>\\n\\n<span style=\\\"float: right;\\\">\\n\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"auth.reset\", options) : helperMissing.call(depth0, \"link-to\", \"auth.reset\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\nor \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"auth.signup\", options) : helperMissing.call(depth0, \"link-to\", \"auth.signup\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=telegram-mvc/templates/auth/login.js");

;eval("define(\"telegram-mvc/templates/auth/reset\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<div class=\\\"login_area\\\">\\n  <div class=\\\"left_login\\\">\\n    <img class=\\\"logo\\\" src=\\\"/images/telegram-logo.png\\\"/>\\n    <div class=\\\"vertical_bar\\\"></div>\\n  </div>\\n  <div class=\\\"right_login\\\">\\n    <img class=\\\"postmark\\\" src=\\\"/images/postmark.png\\\">\\n    <div class=\\\"signin_area\\\">\\n      <div class=\\\"login_form\\\">\\n        <span class=\\\"get_going\\\">Reset password</span><br><br>\\n        <input class=\\\"input\\\" type=\\\"text\\\" placeholder=\\\"Enter your email\\\">\\n        <br><br>\\n        <button class=\\\"simple_action\\\">Reset password</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\");\n      \n    });\n  });//# sourceURL=telegram-mvc/templates/auth/reset.js");

;eval("define(\"telegram-mvc/templates/auth/signup\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"Login\");\n      }\n\n      data.buffer.push(\"<span class=\\\"get_going\\\">Create your account</span><br><br>\\n\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'class\': (\"input\"),\n        \'type\': (\"text\"),\n        \'placeholder\': (\"Enter your name ...\"),\n        \'value\': (\"name\")\n      },hashTypes:{\'class\': \"STRING\",\'type\': \"STRING\",\'placeholder\': \"STRING\",\'value\': \"ID\"},hashContexts:{\'class\': depth0,\'type\': depth0,\'placeholder\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n<br>\\n\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'class\': (\"input\"),\n        \'type\': (\"text\"),\n        \'placeholder\': (\"Enter your username ...\"),\n        \'value\': (\"username\")\n      },hashTypes:{\'class\': \"STRING\",\'type\': \"STRING\",\'placeholder\': \"STRING\",\'value\': \"ID\"},hashContexts:{\'class\': depth0,\'type\': depth0,\'placeholder\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n<br>\\n\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'class\': (\"input\"),\n        \'type\': (\"password\"),\n        \'placeholder\': (\"Enter your password ...\"),\n        \'value\': (\"password\")\n      },hashTypes:{\'class\': \"STRING\",\'type\': \"STRING\",\'placeholder\': \"STRING\",\'value\': \"ID\"},hashContexts:{\'class\': depth0,\'type\': depth0,\'placeholder\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n<br><br>\\n<button class=\\\"simple_action\\\"\");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"saveUser\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Sign up</button>\\n<span style=\\\"float: right;\\\">\\n\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"auth.login\", options) : helperMissing.call(depth0, \"link-to\", \"auth.login\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=telegram-mvc/templates/auth/signup.js");

;eval("define(\"telegram-mvc/templates/mystream\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\" <img class=\\\"logo_top\\\" src=\\\"/images/telegram-logo-small.png\\\"/> \");\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"post.postContent\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</br>\\n\\n\");\n      return buffer;\n      }\n\n      data.buffer.push(\"\\n<div class=\\\"top_bar\\\">\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"auth.login\", options) : helperMissing.call(depth0, \"link-to\", \"auth.login\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n<div class=\\\"user_profile\\\"><img class=\\\"user_img\\\" src=\\\"/images/john.jpg\\\"/>\\n  \");\n      stack1 = helpers._triageMustache.call(depth0, \"session.user\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div></div>\\n\\nMake your post below: <br>\\n\");\n      data.buffer.push(escapeExpression((helper = helpers.textarea || (depth0 && depth0.textarea),options={hash:{\n        \'value\': (\"postContent\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"textarea\", options))));\n      data.buffer.push(\" <br><br>\\n<button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"saveComment\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Publish</button><br>\\n\");\n      stack1 = helpers.each.call(depth0, \"post\", \"in\", \"\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=telegram-mvc/templates/mystream.js");

;eval("define(\"telegram-mvc/tests/adapters/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - adapters\');\n    test(\'adapters/application.js should pass jshint\', function() { \n      ok(true, \'adapters/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=telegram-mvc/tests/adapters/application.jshint.js");

;eval("define(\"telegram-mvc/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=telegram-mvc/tests/app.jshint.js");

;eval("define(\"telegram-mvc/tests/controllers/auth/login.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers/auth\');\n    test(\'controllers/auth/login.js should pass jshint\', function() { \n      ok(true, \'controllers/auth/login.js should pass jshint.\'); \n    });\n  });//# sourceURL=telegram-mvc/tests/controllers/auth/login.jshint.js");

;eval("define(\"telegram-mvc/tests/controllers/auth/signup.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers/auth\');\n    test(\'controllers/auth/signup.js should pass jshint\', function() { \n      ok(true, \'controllers/auth/signup.js should pass jshint.\'); \n    });\n  });//# sourceURL=telegram-mvc/tests/controllers/auth/signup.jshint.js");

;eval("define(\"telegram-mvc/tests/controllers/mystream.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/mystream.js should pass jshint\', function() { \n      ok(true, \'controllers/mystream.js should pass jshint.\'); \n    });\n  });//# sourceURL=telegram-mvc/tests/controllers/mystream.jshint.js");

;eval("define(\"telegram-mvc/tests/helpers/resolver\", \n  [\"ember/resolver\",\"telegram-mvc/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=telegram-mvc/tests/helpers/resolver.js");

;eval("define(\"telegram-mvc/tests/helpers/start-app\", \n  [\"ember\",\"telegram-mvc/app\",\"telegram-mvc/router\",\"telegram-mvc/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=telegram-mvc/tests/helpers/start-app.js");

;eval("define(\"telegram-mvc/tests/initializers/session.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - initializers\');\n    test(\'initializers/session.js should pass jshint\', function() { \n      ok(false, \'initializers/session.js should pass jshint.\\ninitializers/session.js: line 2, col 17, \\\'Ember\\\' is not defined.\\n\\n1 error\'); \n    });\n  });//# sourceURL=telegram-mvc/tests/initializers/session.jshint.js");

;eval("define(\"telegram-mvc/tests/models/post.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/post.js should pass jshint\', function() { \n      ok(true, \'models/post.js should pass jshint.\'); \n    });\n  });//# sourceURL=telegram-mvc/tests/models/post.jshint.js");

;eval("define(\"telegram-mvc/tests/models/user.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/user.js should pass jshint\', function() { \n      ok(true, \'models/user.js should pass jshint.\'); \n    });\n  });//# sourceURL=telegram-mvc/tests/models/user.jshint.js");

;eval("define(\"telegram-mvc/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=telegram-mvc/tests/router.jshint.js");

;eval("define(\"telegram-mvc/tests/routes/mystream.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/mystream.js should pass jshint\', function() { \n      ok(true, \'routes/mystream.js should pass jshint.\'); \n    });\n  });//# sourceURL=telegram-mvc/tests/routes/mystream.jshint.js");

;eval("define(\"telegram-mvc/tests/telegram-mvc/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - telegram-mvc/tests/helpers\');\n    test(\'telegram-mvc/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'telegram-mvc/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=telegram-mvc/tests/telegram-mvc/tests/helpers/resolver.jshint.js");

;eval("define(\"telegram-mvc/tests/telegram-mvc/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - telegram-mvc/tests/helpers\');\n    test(\'telegram-mvc/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'telegram-mvc/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=telegram-mvc/tests/telegram-mvc/tests/helpers/start-app.jshint.js");

;eval("define(\"telegram-mvc/tests/telegram-mvc/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - telegram-mvc/tests\');\n    test(\'telegram-mvc/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'telegram-mvc/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=telegram-mvc/tests/telegram-mvc/tests/test-helper.jshint.js");

;eval("define(\"telegram-mvc/tests/telegram-mvc/tests/unit/adapters/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - telegram-mvc/tests/unit/adapters\');\n    test(\'telegram-mvc/tests/unit/adapters/application-test.js should pass jshint\', function() { \n      ok(true, \'telegram-mvc/tests/unit/adapters/application-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=telegram-mvc/tests/telegram-mvc/tests/unit/adapters/application-test.jshint.js");

;eval("define(\"telegram-mvc/tests/telegram-mvc/tests/unit/controllers/application-controller-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - telegram-mvc/tests/unit/controllers\');\n    test(\'telegram-mvc/tests/unit/controllers/application-controller-test.js should pass jshint\', function() { \n      ok(true, \'telegram-mvc/tests/unit/controllers/application-controller-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=telegram-mvc/tests/telegram-mvc/tests/unit/controllers/application-controller-test.jshint.js");

;eval("define(\"telegram-mvc/tests/telegram-mvc/tests/unit/controllers/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - telegram-mvc/tests/unit/controllers\');\n    test(\'telegram-mvc/tests/unit/controllers/application-test.js should pass jshint\', function() { \n      ok(true, \'telegram-mvc/tests/unit/controllers/application-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=telegram-mvc/tests/telegram-mvc/tests/unit/controllers/application-test.jshint.js");

;eval("define(\"telegram-mvc/tests/telegram-mvc/tests/unit/controllers/auth/login-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - telegram-mvc/tests/unit/controllers/auth\');\n    test(\'telegram-mvc/tests/unit/controllers/auth/login-test.js should pass jshint\', function() { \n      ok(true, \'telegram-mvc/tests/unit/controllers/auth/login-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=telegram-mvc/tests/telegram-mvc/tests/unit/controllers/auth/login-test.jshint.js");

;eval("define(\"telegram-mvc/tests/telegram-mvc/tests/unit/controllers/auth/signup-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - telegram-mvc/tests/unit/controllers/auth\');\n    test(\'telegram-mvc/tests/unit/controllers/auth/signup-test.js should pass jshint\', function() { \n      ok(true, \'telegram-mvc/tests/unit/controllers/auth/signup-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=telegram-mvc/tests/telegram-mvc/tests/unit/controllers/auth/signup-test.jshint.js");

;eval("define(\"telegram-mvc/tests/telegram-mvc/tests/unit/controllers/mystream-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - telegram-mvc/tests/unit/controllers\');\n    test(\'telegram-mvc/tests/unit/controllers/mystream-test.js should pass jshint\', function() { \n      ok(true, \'telegram-mvc/tests/unit/controllers/mystream-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=telegram-mvc/tests/telegram-mvc/tests/unit/controllers/mystream-test.jshint.js");

;eval("define(\"telegram-mvc/tests/telegram-mvc/tests/unit/initializers/session-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - telegram-mvc/tests/unit/initializers\');\n    test(\'telegram-mvc/tests/unit/initializers/session-test.js should pass jshint\', function() { \n      ok(true, \'telegram-mvc/tests/unit/initializers/session-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=telegram-mvc/tests/telegram-mvc/tests/unit/initializers/session-test.jshint.js");

;eval("define(\"telegram-mvc/tests/telegram-mvc/tests/unit/models/post-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - telegram-mvc/tests/unit/models\');\n    test(\'telegram-mvc/tests/unit/models/post-test.js should pass jshint\', function() { \n      ok(true, \'telegram-mvc/tests/unit/models/post-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=telegram-mvc/tests/telegram-mvc/tests/unit/models/post-test.jshint.js");

;eval("define(\"telegram-mvc/tests/telegram-mvc/tests/unit/models/user-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - telegram-mvc/tests/unit/models\');\n    test(\'telegram-mvc/tests/unit/models/user-test.js should pass jshint\', function() { \n      ok(true, \'telegram-mvc/tests/unit/models/user-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=telegram-mvc/tests/telegram-mvc/tests/unit/models/user-test.jshint.js");

;eval("define(\"telegram-mvc/tests/telegram-mvc/tests/unit/routes/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - telegram-mvc/tests/unit/routes\');\n    test(\'telegram-mvc/tests/unit/routes/application-test.js should pass jshint\', function() { \n      ok(true, \'telegram-mvc/tests/unit/routes/application-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=telegram-mvc/tests/telegram-mvc/tests/unit/routes/application-test.jshint.js");

;eval("define(\"telegram-mvc/tests/telegram-mvc/tests/unit/routes/auth/login-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - telegram-mvc/tests/unit/routes/auth\');\n    test(\'telegram-mvc/tests/unit/routes/auth/login-test.js should pass jshint\', function() { \n      ok(true, \'telegram-mvc/tests/unit/routes/auth/login-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=telegram-mvc/tests/telegram-mvc/tests/unit/routes/auth/login-test.jshint.js");

;eval("define(\"telegram-mvc/tests/telegram-mvc/tests/unit/routes/auth/signup-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - telegram-mvc/tests/unit/routes/auth\');\n    test(\'telegram-mvc/tests/unit/routes/auth/signup-test.js should pass jshint\', function() { \n      ok(true, \'telegram-mvc/tests/unit/routes/auth/signup-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=telegram-mvc/tests/telegram-mvc/tests/unit/routes/auth/signup-test.jshint.js");

;eval("define(\"telegram-mvc/tests/telegram-mvc/tests/unit/routes/createaccount-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - telegram-mvc/tests/unit/routes\');\n    test(\'telegram-mvc/tests/unit/routes/createaccount-test.js should pass jshint\', function() { \n      ok(true, \'telegram-mvc/tests/unit/routes/createaccount-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=telegram-mvc/tests/telegram-mvc/tests/unit/routes/createaccount-test.jshint.js");

;eval("define(\"telegram-mvc/tests/telegram-mvc/tests/unit/routes/mystream-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - telegram-mvc/tests/unit/routes\');\n    test(\'telegram-mvc/tests/unit/routes/mystream-test.js should pass jshint\', function() { \n      ok(true, \'telegram-mvc/tests/unit/routes/mystream-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=telegram-mvc/tests/telegram-mvc/tests/unit/routes/mystream-test.jshint.js");

;eval("define(\"telegram-mvc/tests/test-helper\", \n  [\"telegram-mvc/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    var containerVisibility = QUnit.urlParams.nocontainer ? \'hidden\' : \'visible\';\n    document.getElementById(\'ember-testing-container\').style.visibility = containerVisibility;\n  });//# sourceURL=telegram-mvc/tests/test-helper.js");

;eval("define(\"telegram-mvc/tests/unit/adapters/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'adapter:application\', \'ApplicationAdapter\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'serializer:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var adapter = this.subject();\n      ok(adapter);\n    });\n  });//# sourceURL=telegram-mvc/tests/unit/adapters/application-test.js");

;eval("define(\"telegram-mvc/tests/unit/controllers/application-controller-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'controller:application-controller\', \'ApplicationControllerController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=telegram-mvc/tests/unit/controllers/application-controller-test.js");

;eval("define(\"telegram-mvc/tests/unit/controllers/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'controller:application\', \'ApplicationController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=telegram-mvc/tests/unit/controllers/application-test.js");

;eval("define(\"telegram-mvc/tests/unit/controllers/auth/login-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'controller:auth/login\', \'AuthLoginController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=telegram-mvc/tests/unit/controllers/auth/login-test.js");

;eval("define(\"telegram-mvc/tests/unit/controllers/auth/signup-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'controller:auth/signup\', \'AuthSignupController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=telegram-mvc/tests/unit/controllers/auth/signup-test.js");

;eval("define(\"telegram-mvc/tests/unit/controllers/mystream-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'controller:mystream\', \'MystreamController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=telegram-mvc/tests/unit/controllers/mystream-test.js");

;eval("define(\"telegram-mvc/tests/unit/initializers/session-test\", \n  [\"ember\",\"telegram-mvc/initializers/session\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var initialize = __dependency2__.initialize;\n\n    var container, application;\n\n    module(\'SessionInitializer\', {\n      setup: function() {\n        Ember.run(function() {\n          container = new Ember.Container();\n          application = Ember.Application.create();\n          application.deferReadiness();\n        });\n      }\n    });\n\n    // Replace this with your real tests.\n    test(\'it works\', function() {\n      initialize(container, application);\n\n      // you would normally confirm the results of the initializer here\n      ok(true);\n    });\n  });//# sourceURL=telegram-mvc/tests/unit/initializers/session-test.js");

;eval("define(\"telegram-mvc/tests/unit/models/post-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForModel = __dependency1__.moduleForModel;\n    var test = __dependency1__.test;\n\n    moduleForModel(\'post\', \'Post\', {\n      // Specify the other units that are required for this test.\n      needs: []\n    });\n\n    test(\'it exists\', function() {\n      var model = this.subject();\n      // var store = this.store();\n      ok(!!model);\n    });\n  });//# sourceURL=telegram-mvc/tests/unit/models/post-test.js");

;eval("define(\"telegram-mvc/tests/unit/models/user-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForModel = __dependency1__.moduleForModel;\n    var test = __dependency1__.test;\n\n    moduleForModel(\'user\', \'User\', {\n      // Specify the other units that are required for this test.\n      needs: []\n    });\n\n    test(\'it exists\', function() {\n      var model = this.subject();\n      // var store = this.store();\n      ok(!!model);\n    });\n  });//# sourceURL=telegram-mvc/tests/unit/models/user-test.js");

;eval("define(\"telegram-mvc/tests/unit/routes/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:application\', \'ApplicationRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=telegram-mvc/tests/unit/routes/application-test.js");

;eval("define(\"telegram-mvc/tests/unit/routes/auth/login-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:auth/login\', \'AuthLoginRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=telegram-mvc/tests/unit/routes/auth/login-test.js");

;eval("define(\"telegram-mvc/tests/unit/routes/auth/signup-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:auth/signup\', \'AuthSignupRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=telegram-mvc/tests/unit/routes/auth/signup-test.js");

;eval("define(\"telegram-mvc/tests/unit/routes/createaccount-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:createaccount\', \'CreateaccountRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=telegram-mvc/tests/unit/routes/createaccount-test.js");

;eval("define(\"telegram-mvc/tests/unit/routes/mystream-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:mystream\', \'MystreamRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=telegram-mvc/tests/unit/routes/mystream-test.js");

/* jshint ignore:start */

define('telegram-mvc/config/environment', ['ember'], function(Ember) {
  var prefix = 'telegram-mvc';
/* jshint ignore:start */

try {
  var metaName = prefix + '/config/environment';
  var rawConfig = Ember['default'].$('meta[name="' + metaName + '"]').attr('content');
  var config = JSON.parse(unescape(rawConfig));

  return { 'default': config };
}
catch(err) {
  throw new Error('Could not read config from meta tag with name "' + metaName + '".');
}

/* jshint ignore:end */


});

if (runningTests) {
  require('telegram-mvc/tests/test-helper');
} else {
  require('telegram-mvc/app')['default'].create({"LOG_ACTIVE_GENERATION":true,"LOG_VIEW_LOOKUPS":true});
}

/* jshint ignore:end */
